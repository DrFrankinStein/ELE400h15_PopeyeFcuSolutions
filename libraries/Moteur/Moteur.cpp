/* ================ Led.cpp =================================================
** ELE-400 MÉTHODOLOGIE DE DESIGN EN GÉNIE ÉLECTRIQUE
** HIVER 2015
** Ecole de Technologie Supérieure
** ========================================================================

			TEAM:	PopoyeFcuSolution	
				
** ========================================================================
** RÉALISATION: Controleur de FCU	
** ========================================================================
** Written by: Philippe Soroka-Lavictoire
** ========================================================================
** Description: 
** ======================================================================== */ 


/* ========================================================================
** Include files 
** ======================================================================== */

#include "Moteur.h" 

/* ========================================================================
** Prototypes
** ======================================================================== */


/* ========================================================================
** Fonctions
** ======================================================================== */


/* ------------------------------------------------------------------------
** name:  setupMoteur
** ------------------------------------------------------------------------
** input: wat
** output: wat
** ------------------------------------------------------------------------
** Description: wat
** ------------------------------------------------------------------------ */
void setupMoteur(void)
{
  pinMode(8, OUTPUT);	
}

/* ------------------------------------------------------------------------
** name:  tourneMoteur
** ------------------------------------------------------------------------
** input: wat
** output: wat
** ------------------------------------------------------------------------
** Description: wat
** ------------------------------------------------------------------------ */ 
void tourneMoteur(int angle, int direction) {  

	digitalWrite(PIN_DIRECTION, direction);
	
	g_APinDescription[PIN_PULSE].pPort -> PIO_SODR = g_APinDescription[PIN_PULSE].ulPin;
	g_APinDescription[PIN_PULSE].pPort -> PIO_CODR = g_APinDescription[PIN_PULSE].ulPin;
	//digitalWrite(PIN_PULSE, HIGH);
	//digitalWrite(PIN_PULSE, LOW);
}

/* ========================================================================
** End of  Moteur.cpp
** ======================================================================== */
